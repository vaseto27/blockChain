{"id":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","dependencies":[{"name":"C:\\Users\\Vasil.Aleksandrov\\Documents\\blockChain\\package.json","includedInParent":true,"mtime":1699396428997},{"name":"C:\\Users\\Vasil.Aleksandrov\\Documents\\blockChain\\node_modules\\@restart\\hooks\\package.json","includedInParent":true,"mtime":1699364985964},{"name":"react","loc":{"line":1,"column":34,"index":34},"parent":"C:\\Users\\Vasil.Aleksandrov\\Documents\\blockChain\\node_modules\\@restart\\hooks\\esm\\useCommittedRef.js","resolved":"C:\\Users\\Vasil.Aleksandrov\\Documents\\blockChain\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = require(\"react\");\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = (0, _react.useRef)(value);\n  (0, _react.useEffect)(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nvar _default = exports.default = useCommittedRef;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":1,"column":0},"name":"_react"},{"generated":{"line":7,"column":10},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":13},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":20},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":0}},{"generated":{"line":17,"column":9},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":9},"name":"useCommittedRef"},{"generated":{"line":17,"column":24},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":24},"name":"useCommittedRef"},{"generated":{"line":17,"column":25},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":25},"name":"value"},{"generated":{"line":17,"column":30},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":30}},{"generated":{"line":17,"column":32},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":12,"column":32}},{"generated":{"line":18,"column":2},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":2}},{"generated":{"line":18,"column":8},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":8},"name":"ref"},{"generated":{"line":18,"column":11},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":11}},{"generated":{"line":18,"column":14},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":14}},{"generated":{"line":18,"column":18},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":14},"name":"useRef"},{"generated":{"line":18,"column":31},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":20}},{"generated":{"line":18,"column":33},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":21},"name":"value"},{"generated":{"line":18,"column":38},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":26}},{"generated":{"line":18,"column":39},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":13,"column":27}},{"generated":{"line":19,"column":2},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":2}},{"generated":{"line":19,"column":6},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":2},"name":"useEffect"},{"generated":{"line":19,"column":22},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":11}},{"generated":{"line":19,"column":24},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":12}},{"generated":{"line":19,"column":30},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":14,"column":18}},{"generated":{"line":20,"column":4},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":4},"name":"ref"},{"generated":{"line":20,"column":7},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":7}},{"generated":{"line":20,"column":8},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":8},"name":"current"},{"generated":{"line":20,"column":15},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":15}},{"generated":{"line":20,"column":18},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":18},"name":"value"},{"generated":{"line":20,"column":23},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":15,"column":23}},{"generated":{"line":21,"column":2},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":2}},{"generated":{"line":21,"column":3},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":3}},{"generated":{"line":21,"column":5},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":5}},{"generated":{"line":21,"column":6},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":6},"name":"value"},{"generated":{"line":21,"column":11},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":11}},{"generated":{"line":21,"column":12},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":12}},{"generated":{"line":21,"column":13},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":16,"column":13}},{"generated":{"line":22,"column":2},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":17,"column":2}},{"generated":{"line":22,"column":9},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":17,"column":9},"name":"ref"},{"generated":{"line":22,"column":12},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":17,"column":12}},{"generated":{"line":23,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":0}},{"generated":{"line":24,"column":0},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1}},{"generated":{"line":24,"column":4},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1},"name":"_default"},{"generated":{"line":24,"column":12},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1}},{"generated":{"line":24,"column":15},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1},"name":"exports"},{"generated":{"line":24,"column":22},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1}},{"generated":{"line":24,"column":23},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1},"name":"default"},{"generated":{"line":24,"column":30},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":18,"column":1}},{"generated":{"line":24,"column":33},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":19,"column":15},"name":"useCommittedRef"},{"generated":{"line":24,"column":48},"source":"../../node_modules/@restart/hooks/esm/useCommittedRef.js","original":{"line":19,"column":30}}],"sources":{"../../node_modules/@restart/hooks/esm/useCommittedRef.js":"import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;"},"lineCount":null}},"error":null,"hash":"5505bba8d6914dfc96c3f40532679b35","cacheData":{"env":{}}}